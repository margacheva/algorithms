# В отсортированном списке ищем разницу между элементами,
# записываем разницу и записываем элементы.
# Если разница меньше, чем записанная, то перезаписываем список.
# Сложность O(nlogn)

def minimumAbsDifference(arr):
    arr.sort()  # сортируем список
    res = []  # создапм пустой список для записи результата
    dif = 0  # ставим счетчик разницы
    for i in range(len(arr) - 1):  # перебираем элементы до предпоследенего, ак как после него ничего не следует
        new_dif = arr[i + 1] - arr[i]  # считаем разницу между элементом и элементом до, чтобы разница была по модулю
        if dif == 0:  # когда у нас в счетчике еще ничего нет
            dif = new_dif  # перезаписываем счетчик
            res.append([arr[i], arr[i + 1]])  # добавляем в список первые два элемента
        else:
            if new_dif < dif:  # если новая разница меньше старой
                dif = new_dif  # перезаписываем счетчик
                res.clear()  # очищаем список
                res.append([arr[i], arr[i + 1]])  # добавляем в список элементы с меньшей разницей
            elif new_dif == dif:  # если новая и старая разницы совпадают
                res.append([arr[i], arr[i + 1]])  # просто добавляем элементы в список

    return res  # возвращаем список


print(minimumAbsDifference([4, 2, 1, 3]))
