# Алгоритм заключается в том, чтобы проходится по каждому элементу
# в каждом списке и увеличивать нужный элемент на единицу. В итоге то число,
# которое мы заменили будет равняться размеру матрицы
# сложность O(n**2)
class Solution:
    def countSquares(self, matrix: List[List[int]]) -> int:
        counter = 0  # вводим счетчик
        for i in range(len(matrix)):  # для каждого списка в матрице
            for j in range(len(matrix[0])):  # для каждого элемента в списке матрицы
                if matrix[i][j] == 1 and i > 0 and j > 0:  # условие: если значение элемента равно единице
                    # и если индексы не равны нулю
                    matrix[i][j] = min(matrix[i - 1][j], matrix[i][j - 1],
                                       matrix[i - 1][j - 1]) + 1  # мы заменяем элемент,
                    # на сумму наибольшего соседнего значения и единицы

                counter += matrix[i][j]  # в случае, если вышеизложенные условия нам не подходят,
                # мы добавляем это число в счетчик
        return counter
