# Алгоритм заключается  в том, что мы считаем разницу между элементами
# и потом складваем нужные нам
# сложность O(n)
class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        maxProfit = 0  # ставим счетчик максимальной выгоды
        for i in range(1, len(prices)):  # проходим по элементам, начиная со второго
            if prices[i] > prices[i - 1]:  # если элемент больше предыдущего
                maxProfit += prices[i] - prices[i - 1]  # то добавляем их разницу в наш счетчик
        return maxProfit

# когда мы сравниваем элементы и вычиляем их разницу, мы как раз и получаем макимальную выгоду,
# если купим в прошлый день а продадим в следующий
